import pygame as pg
from pygame.draw import *

pg.init()

FPS = 30
screen = pg.display.set_mode((1250, 830))

polygon(screen, (255, 153, 51), [(0, 390), (1250, 260), (1250, 0), (0, 0)])
polygon(screen, (255, 210, 200), [(0, 0), (0, 390), (3, 390), (12, 336), (20, 337), (31, 334), (41, 334), (51, 332), (61, 327), (71, 322), (81, 318), (90, 312), (100, 307), (110, 300), (120, 294), (140, 280), (160, 260), (190, 231), (255, 164), (305, 180), (325, 210), (440, 315), (560, 300), (605, 322), (665, 262), (720, 276), (750, 250), (760, 250), (770, 248), (780, 244), (790, 241), (800, 236), (810, 233), (820, 227), (830, 220), (840, 210), (850, 198), (860, 180), (870, 160), (880, 148), (890, 138), (900, 133), (910, 130), (920, 135), (924, 135), (927, 140), (930, 142), (935, 155), (990, 205), (1040, 195), (1050, 197), (1060, 200), (1070, 205), (1080, 210), (1090, 218), (1120, 235), (1160, 214), (1250, 258), (1250, 0)])
polygon(screen, (255, 210, 160), [(0, 0), (0, 180), (240, 180), (255, 164), (305, 180), (860, 180), (870, 160), (880, 148), (890, 138), (900, 133), (910, 130), (920, 135), (924, 135), (927, 140), (930, 142), (935, 155), (962, 180), (1250, 180), (1250, 0)])
polygon(screen, (255, 210, 200), [(320, 356), (1250, 356), (1250, 260)])
polygon(screen, (240, 200, 140), [(0, 360), (8, 360), (3, 389), (320, 356), (1250, 356), (1250, 830), (0, 830)])
polygon(screen, (205, 92, 92), [(0, 415), (10, 415), (70, 460), (205, 535), (270, 440), (360, 490), (400, 375), (510, 400), (600, 465), (718, 440), (730, 423), (740, 410), (750, 400), (760, 390), (770, 380), (780, 370), (790, 362), (800, 357), (810, 350), (820, 344), (830, 342), (840, 340), (850, 339), (860, 340), (870, 342), (880, 348), (890, 353), (900, 360), (930, 390), (950, 405), (980, 425), (1020, 440), (1075, 374), (1123, 412), (1150, 362), (1200, 375), (1250, 295), (1250, 830), (0, 830)])
ellipse(screen, (205, 92, 92), [30, 335, 185, 350])
circle(screen, (255, 255, 0), (590, 175), 70)
rect(screen, (188, 143, 143), (0, 565, 1250, 265))

pg.display.update()
clock = pg.time.Clock()
finished = False

while not finished:
    clock.tick(FPS)
    for event in pg.event.get():
        if event.type == pg.QUIT:
            finished = True
